{"remainingRequest":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/src/components/MarsRover.vue?vue&type=style&index=0&id=16c1dc1e&scoped=true&lang=css&","dependencies":[{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/src/components/MarsRover.vue","mtime":1602961537731},{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Saish/Documents/vue/nasa-marsrover-final/NASA-MarsRover/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMyB7CiAgbWFyZ2luOiAwOwogIGZsb2F0OiBsZWZ0OwogIGRpc3BsYXk6IGJsb2NrOwp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Ci5zZWxlY3RlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlOwogIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOyAKfQojZGF0ZSB7CiAgYm9yZGVyOiAycHggYmxhY2sgc29saWQ7CiAgcGFkZGluZzogNXB4IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9Cg=="},{"version":3,"sources":["MarsRover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MarsRover.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n  <v-container class=\"my-5\">\n    <!-- card with all selection items -->\n    <v-card flat outlined class=\"pa-3 mb-5 blue--text text--darken-4\">\n      <!-- Choose rover -->\n      <v-layout row wrap justify-center align-center>\n        <v-flex xs12 md6 lg6 class=\"mb-3 text-center\">\n          <h2>Choose rover</h2>\n        </v-flex>\n      </v-layout>\n      <v-layout row wrap justify-center align-center>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block class=\"rover-btn blue--text text--darken-4 rover\" @click=\"chooseRover('curiosity')\" id=\"curiosity\">Curiosity</v-btn>\n          </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block class=\"rover-btn blue--text text--darken-4 rover\" @click=\"chooseRover('opportunity')\" id=\"opportunity\">Opportunity</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block class=\"rover-btn blue--text text--darken-4 rover\" @click=\"chooseRover('spirit')\" id=\"spirit\">Spirit</v-btn>\n        </v-flex>\n      </v-layout>\n\n      <!-- Choose camera -->\n      <v-layout row wrap justify-center align-center>\n        <v-flex xs12 md6 lg6 class=\"mt-5 mb-3 text-center\">\n          <h2>Choose camera</h2>\n        </v-flex>\n      </v-layout>\n      <v-layout row wrap justify-center align-center>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('allCam')\" id=\"allCam\" class=\"blue--text text--darken-4 cam\">All cams</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('fhaz')\" id=\"fhaz\" class=\"blue--text text--darken-4 cam\">FHAZ</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('rhaz')\" id=\"rhaz\" class=\"blue--text text--darken-4 cam\">RHAZ</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('mast')\" id=\"mast\" class=\"blue--text text--darken-4 cam\">MAST</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('chemcam')\" id=\"chemcam\" class=\"blue--text text--darken-4 cam\">CHEMCAM</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('mahli')\" id=\"mahli\" class=\"blue--text text--darken-4 cam\">MAHLI</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('mardi')\" id=\"mardi\" class=\"blue--text text--darken-4 cam\">MARDI</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('navcam')\" id=\"navcam\" class=\"blue--text text--darken-4 cam\">NAVCAM</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('pancam')\" id=\"pancam\" class=\"blue--text text--darken-4 cam\">PANCAM</v-btn>\n        </v-flex>\n        <v-flex xs6 md2 lg2 class=\"ma-2\">\n          <v-btn block @click=\"chooseCam('minites')\" id=\"minites\" class=\"blue--text text--darken-4 cam\">MINITES</v-btn>\n        </v-flex>\n      </v-layout>\n\n      <!-- Choose date  -->\n      <v-layout row wrap justify-center align-center>\n        <v-flex xs12 md6 lg6 class=\"mt-5 mb-3 text-center\">\n          <h2>Choose Date</h2>\n        </v-flex>\n      </v-layout>\n      <form @submit.prevent=\"fetchApi\">\n        <v-layout row wrap justify-center align-center>\n          <v-flex xs12 md2 lg2 class=\"ma-2 text-center\">\n            <input id=\"date\" type=\"date\" v-model=\"dateIn\" class=\"blue--text text--darken-4\"/>\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap justify-center align-center>\n          <v-flex xs12 md2 lg2 class=\"ma-2\">\n            <v-btn block class=\"blue--text text--darken-4\" type=\"submit\">Submit</v-btn>\n          </v-flex>\n          <v-flex xs12 md2 lg2 class=\"ma-2\">\n            <v-btn block depressed class=\"mb-2 blue--text text--darken-4\" @click=\"clearAll()\">Clear all filters</v-btn>\n          </v-flex>\n        </v-layout>\n        <v-layout row wrap justify-center align-center>\n          <div class=\"caption\">Note: Click submit button after changing any filters</div>\n        </v-layout>\n      </form>\n\n      <!-- Display mission manifest data -->\n      <v-layout row wrap justify-center align-center outlined>\n        <v-flex xs12 md6 lg6 class=\"my-2 text-center\">\n          <h2>Rover status - <span class=\"text-decoration-underline\">{{ status.toUpperCase() }}</span></h2>\n        </v-flex>\n        <v-flex xs12 md6 lg6 class=\"my-2 text-center\">\n          <h2>Total photos - <span class=\"text-decoration-underline\">{{ totalPhotos }}</span></h2>\n        </v-flex>\n      </v-layout>\n    </v-card>\n\n    <ShowPhotos :info = \"info\"></ShowPhotos>\n  </v-container>\n</template>\n\n<script>\n  const axios = require(\"axios\");\n  import ShowPhotos from './ShowPhotos';\n\n  export default {\n    name: 'MarsRover',\n    components: {\n      ShowPhotos\n    },\n\n    data() {\n      return {\n        info: {},\n        images: {},\n        dateIn: '',\n        rover: '',\n        camName: '',\n        status: '',\n        totalPhotos: ''\n      }\n    },\n    mounted() {\n      // funtion to be executed when the app mounts, page load\n\n      // set date to a random date\n      this.date = this.randomDate(new Date(2008, 0, 1), new Date());\n      this.dateIn = this.date;\n\n      // set camera to \"all\"\n      this.camName = \"all\"\n\n      // set default rover - curiosity\n      this.rover = \"curiosity\"\n\n      // add selected states to respective buttons\n      document.getElementById(\"curiosity\").classList.add(\"selected\")\n      document.getElementById(\"allCam\").classList.add(\"selected\")\n\n      // disable cameras not available for curiosity rover\n      document.getElementById(\"mast\").classList.remove(\"v-btn--disabled\");\n      document.getElementById(\"chemcam\").classList.remove(\"v-btn--disabled\");\n      document.getElementById(\"mahli\").classList.remove(\"v-btn--disabled\");\n      document.getElementById(\"mardi\").classList.remove(\"v-btn--disabled\");\n      document.getElementById(\"pancam\").classList.add(\"v-btn--disabled\");\n      document.getElementById(\"minites\").classList.add(\"v-btn--disabled\");\n      \n      // get mission manifest data for respective rover\n      this.getManifest(this.rover)\n\n      // manipulate url for specific date\n      var url = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${this.date}&api_key=ACLiv8vogNyP7Z7yxOo7IDSfGIyCLDBLgjDzaeTc`;\n      \n      // fetch API via axios\n      axios\n        .get(url)\n        .then(response1 => {\n          this.info = response1.data.photos\n        })\n        .catch(error => {\n          console.log(error)\n      });\n    },\n    methods: {\n      getManifest(roverName) { \n        // function to get mission manifest data for respective rover\n\n        var url = `https://api.nasa.gov/mars-photos/api/v1/manifests/${roverName}?api_key=ACLiv8vogNyP7Z7yxOo7IDSfGIyCLDBLgjDzaeTc`;\n\n        // fetch API via axios\n        axios\n          .get(url)\n          .then(response => {\n            this.status = response.data.photo_manifest.status\n            this.totalPhotos = response.data.photo_manifest.total_photos\n          })\n          .catch(error => {\n            console.log(error)\n        });\n      },\n      randomDate(start, end) {\n        // function to generate random date\n        var out = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n        let year = out.getFullYear();\n        let month = (1 + out.getMonth()).toString().padStart(2, '0');\n        let day = out.getDate().toString().padStart(2, '0');\n\n        // return date in required format YYYY-MM-DD\n        return year + '-' + month + '-' + day;\n      },\n      clearAll() {\n        // function to clear all filters\n\n        this.camName = 'all'\n        this.dateIn = ''\n        this.rover = ''\n\n        // clears all selected rover button states\n        let rovers = document.querySelectorAll('.rover')\n        rovers.forEach(rover => {\n          rover.classList.remove(\"selected\")\n        })\n\n        // reset any selected buttons\n        let cameras = document.querySelectorAll('.cam')\n        cameras.forEach(camera => {\n          camera.classList.remove(\"selected\")\n        })\n\n        // select all cam option by default\n        document.getElementById(\"allCam\").classList.add(\"selected\")\n        \n      },\n      chooseRover(rover) {\n        // function to choose rover\n        this.rover = rover;\n        this.camName = 'all'\n\n        // reset and set rover button selected states\n        let rovers = document.querySelectorAll('.rover')\n        rovers.forEach(rover => {\n          rover.classList.remove(\"selected\")\n        })\n        document.getElementById(rover).classList.add(\"selected\")\n\n        // reset camera button select states and set to all\n        // reset any selected buttons\n        let cameras = document.querySelectorAll('.cam')\n        cameras.forEach(camera => {\n          camera.classList.remove(\"selected\")\n        })\n\n        // select all cam option by default\n        document.getElementById(\"allCam\").classList.add(\"selected\")\n\n        // set camera buttons for curiosity\n        if (rover == \"curiosity\") {\n          document.getElementById(\"mast\").classList.remove(\"v-btn--disabled\");\n          document.getElementById(\"chemcam\").classList.remove(\"v-btn--disabled\");\n          document.getElementById(\"mahli\").classList.remove(\"v-btn--disabled\");\n          document.getElementById(\"mardi\").classList.remove(\"v-btn--disabled\");\n          document.getElementById(\"pancam\").classList.add(\"v-btn--disabled\");\n          document.getElementById(\"minites\").classList.add(\"v-btn--disabled\");\n        }\n\n        // set camera buttons for opportunity and spirit\n        else if (rover == \"opportunity\" || rover == \"spirit\") {\n          document.getElementById(\"mast\").classList.add(\"v-btn--disabled\");\n          document.getElementById(\"chemcam\").classList.add(\"v-btn--disabled\");\n          document.getElementById(\"mahli\").classList.add(\"v-btn--disabled\");\n          document.getElementById(\"mardi\").classList.add(\"v-btn--disabled\");\n          document.getElementById(\"pancam\").classList.remove(\"v-btn--disabled\");\n          document.getElementById(\"minites\").classList.remove(\"v-btn--disabled\");\n        }\n      },\n      chooseCam(camera) {\n        // function to choose camera\n\n        this.camName = camera;\n\n        // set button active state\n        // reset any selected buttons\n        let cameras = document.querySelectorAll('.cam')\n        cameras.forEach(camera => {\n          camera.classList.remove(\"selected\")\n        })\n\n        // select camera button whichever is passed through the function\n        document.getElementById(camera).classList.add(\"selected\")\n      },\n      fetchApi() {\n        // function to call NASA api and get the image source urls\n\n        // set date\n        if (this.dateIn == '') {\n          // generate a random date\n          this.date = this.randomDate(new Date(2008, 0, 1), new Date());\n          this.dateIn = this.date;\n        }\n        else {\n          // get date from form\n          this.date = this.dateIn;\n        }\n\n        // set rover, if not selected\n        if(this.rover == '') {\n          this.rover = 'curiosity'\n          document.getElementById(\"curiosity\").classList.add(\"selected\")\n        }\n\n        // manipulate url for specific rover, camera and date\n        var url = ''\n\n        if (this.camName == 'all') {\n          url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${this.rover}/photos?earth_date=${this.date}&api_key=ACLiv8vogNyP7Z7yxOo7IDSfGIyCLDBLgjDzaeTc`;\n        }\n        else {\n          url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${this.rover}/photos?earth_date=${this.date}&camera=${this.camName}&api_key=ACLiv8vogNyP7Z7yxOo7IDSfGIyCLDBLgjDzaeTc`;\n        }\n        \n        // get manifest data\n        this.getManifest(this.rover)\n\n        // fetch API via axios\n        axios\n          .get(url)\n          .then(response => {\n            this.info = response.data.photos\n          })\n          .catch(error => {\n            console.log(error)\n          });\n      }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  h3 {\n    margin: 0;\n    float: left;\n    display: block;\n  }\n  a {\n    color: #42b983;\n  }\n  .selected {\n    background-color: aliceblue;\n    border: 2px solid black; \n  }\n  #date {\n    border: 2px black solid;\n    padding: 5px 15px;\n    border-radius: 5px;\n  }\n</style>\n"]}]}